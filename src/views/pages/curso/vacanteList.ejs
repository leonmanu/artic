<!DOCTYPE html>
<html lang="en">
<head>
    <%- include('../../partials/header') %> 
    <!-- Incluir la librería SheetJS para generar Excel -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
</head>
<body>
    <%- include('../../partials/spinner') %> 
    <%- include('../../partials/navbar') %> 
    
    <!-- Navbar secundario -->
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container">
            <div class="navbar-brand">
                <span class="fw-bolder" id="claveEscuela">Admin</span> / Todas las vacantes
            </div>
            <!-- Botones para copiar y descargar -->
        <div class="mb-3">
            <button id="btnCopiarTabla" class="btn btn-primary">
                <i class="bi bi-clipboard"></i> Copiar tabla
            </button>
            <button id="btnDescargarExcel" class="btn btn-success">
                <i class="bi bi-file-earmark-excel"></i> Descargar Excel
            </button>
        </div>
        </div>
    </nav>

    <!-- Contenido Principal -->
    <div class="container mt-4">
        <!-- Cuadro dinámico -->
        <div class="mb-3 p-3 bg-info border rounded">
            <strong>Total de Escuelas:</strong> <span id="totalEscuelas">0</span> |
            <strong>Total de Cursos:</strong> <span id="totalCursos">0</span> |
            <strong>Total de Vacantes:</strong> <span id="totalVacantes">0</span>
        </div>

        <table class="table table-striped table-hover" id="tablaPrincipal">
            <thead class="table-primary text-center">
                <tr>
                    <th>
                        <a class="link-dark" href="#">
                            Escuela
                            <i class="bi bi-arrow-down-up"></i>
                            <i class="bi bi-sort-down-alt d-none"></i>
                            <i class="bi bi-sort-down d-none"></i>
                        </a> 
                        <br>
                        <input type="search" class="form-control narrow-input" id="inpEstudiante" placeholder="Search..">
                    </th>
                    <th>
                        <a class="link-dark" href="#">
                            Curso
                            <i class="bi bi-arrow-down-up"></i>
                            <i class="bi bi-sort-down-alt d-none"></i>
                            <i class="bi bi-sort-down d-none"></i>
                        </a> 
                        <br>
                        <input id="inpDocumento" placeholder="Search.." type="search" class="form-control narrow-input">
                    </th>
                    <th>
                        <a class="link-dark" href="#">
                            Orientación
                            <i class="bi bi-arrow-down-up"></i>
                            <i class="bi bi-sort-down-alt d-none"></i>
                            <i class="bi bi-sort-down d-none"></i>
                        </a> 
                        <br>
                        <select id="inpOrientacion" class="form-select">
                            <option value="">Todos</option>
                        </select>
                    </th>
                    <th>
                        <a class="link-dark" href="#">
                            Turno
                            <i class="bi bi-arrow-down-up"></i>
                            <i class="bi bi-sort-down-alt d-none"></i>
                            <i class="bi bi-sort-down d-none"></i>
                        </a> 
                        <br>
                        <select id="inpTurno" class="form-select">
                            <option value="">Todos</option>
                        </select>
                    </th>
                    <th>
                        <a class="link-dark" href="#">
                            Capacidad
                            <i class="bi bi-arrow-down-up"></i>
                            <i class="bi bi-sort-down-alt d-none"></i>
                            <i class="bi bi-sort-down d-none"></i>
                        </a> 
                        <br>
                        <input id="inpCapacidad" placeholder="Search.." type="search" class="form-control narrow-input">
                    </th>
                    <th>
                        <a class="link-dark" href="#">
                            N° de Est.
                            <i class="bi bi-arrow-down-up"></i>
                            <i class="bi bi-sort-down-alt d-none"></i>
                            <i class="bi bi-sort-down d-none"></i>
                        </a> 
                        <br>
                        <input id="inpEstudiantes" placeholder="Search.." type="search" class="form-control narrow-input">
                    </th>
                    <th>
                        <a class="link-dark" href="#">
                            Vacantes
                            <i class="bi bi-arrow-down-up"></i>
                            <i class="bi bi-sort-down-alt d-none"></i>
                            <i class="bi bi-sort-down d-none"></i>
                        </a> 
                        <input id="inpVacantes" placeholder="Search.." type="search" class="form-control narrow-input">
                    </th>
                </tr>
            </thead>
            <tbody id="myTable">
                <% vacantes.forEach(vacante => { %>
                    <tr>
                        <td class="text-center"><%= vacante.escuelaClave %></td>
                        <td class="text-center"><%= vacante.cursoClave %></td>
                        <td class="text-center"><%= vacante.orientacion || '' %></td>
                        <td class="text-center"><%= vacante.turno || '' %></td>
                        <td class="text-center"><%= vacante.capacidad || '' %></td>
                        <td class="text-center"><%= vacante.estudiantes || '' %></td>
                        <td class="text-center">
                            <% if (vacante.capacidad && vacante.estudiantes) { %>
                                <%= vacante.capacidad - vacante.estudiantes %>
                            <% } else { %>
                                -
                            <% } %>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
    <%- include('../../partials/footer') %> 

    <style>
        .narrow-input {
            width: 100px; /* Ajusta el ancho de los inputs */
        }
    </style>

    <script>
        $(document).ready(function () {
            let sortDirection = {}; // Para almacenar la dirección de orden para cada columna

            // Cargar dinámicamente las opciones del select
            function populateSelect(columnIndex, selectId) {
                var uniqueValues = new Set();

                // Recolecta valores únicos de la columna especificada
                $("#myTable tr").each(function () {
                    var cellValue = $(this).find("td").eq(columnIndex).text().trim();
                    if (cellValue) uniqueValues.add(cellValue);
                });

                // Llena el select con los valores únicos
                var select = $("#" + selectId);
                select.empty(); // Limpia opciones previas
                select.append('<option value="">Todos</option>'); // Opción para "sin filtro"
                uniqueValues.forEach(function (value) {
                    select.append(`<option value="${value.toLowerCase()}">${value}</option>`);
                });
            }

            // Aplicar filtros
            function applyFilters() {
                $("#myTable tr").each(function () {
                    var row = $(this);
                    var isVisible = true;

                    // Recorre cada input y verifica si coincide con la columna correspondiente
                    $("thead input, thead select").each(function (index) {
                        var inputValue = $(this).val().toLowerCase();
                        var cellValue = row.find("td").eq(index).text().toLowerCase();

                        // Si el valor no coincide, marca la fila como no visible
                        if (inputValue && cellValue.indexOf(inputValue) === -1) {
                            isVisible = false;
                            return false; // Salir del loop si no coincide
                        }
                    });

                    // Muestra u oculta la fila según isVisible
                    row.toggle(isVisible);
                });

                // Actualizar el cuadro dinámico
                updateDynamicBox();
            }

            // Actualizar el cuadro dinámico
            function updateDynamicBox() {
                var totalEscuelas = new Set();
                var totalCursos = new Set();
                var totalVacantes = 0;

                $("#myTable tr").each(function () {
                    if ($(this).is(":visible")) { // Solo cuenta filas visibles
                        var escuela = $(this).find("td").eq(0).text().trim();
                        var curso = $(this).find("td").eq(1).text().trim();
                        var vacantes = $(this).find("td").eq(6).text().trim();

                        if (escuela) totalEscuelas.add(escuela);
                        if (curso) totalCursos.add(curso);
                        if (vacantes && !isNaN(vacantes)) totalVacantes += parseInt(vacantes);
                    }
                });

                $("#totalEscuelas").text(totalEscuelas.size);
                $("#totalCursos").text(totalCursos.size);
                $("#totalVacantes").text(totalVacantes);
            }

            // Ordenar la tabla por columna
            function sortTable(columnIndex) {
                var rows = $("#myTable tr").get();
                var direction = sortDirection[columnIndex] || 'asc'; // Default to ascending

                rows.sort(function (a, b) {
                    var cellA = $(a).find("td").eq(columnIndex).text().toLowerCase();
                    var cellB = $(b).find("td").eq(columnIndex).text().toLowerCase();

                    if (cellA < cellB) {
                        return direction === 'asc' ? -1 : 1;
                    }
                    if (cellA > cellB) {
                        return direction === 'asc' ? 1 : -1;
                    }
                    return 0;
                });

                // Re-append las filas en el orden correcto
                $.each(rows, function (index, row) {
                    $("#myTable").append(row);
                });

                // Cambiar la dirección para la próxima vez que se haga clic
                sortDirection[columnIndex] = direction === 'asc' ? 'desc' : 'asc';

                // Actualizar los íconos de la columna
                updateIcons(columnIndex, direction);

                // Actualizar el cuadro dinámico después de ordenar
                updateDynamicBox();
            }

            // Actualizar los íconos de orden en el encabezado
            function updateIcons(columnIndex, direction) {
                // Restablecer todos los íconos
                $("thead th i").addClass("d-none");
                $("thead th i.bi-arrow-down-up").removeClass("d-none");

                // Seleccionar los íconos de la columna actual
                var header = $("thead th").eq(columnIndex);
                var arrowIcon = header.find("i.bi-arrow-down-up");
                var sortDownIcon = header.find("i.bi-sort-down-alt");
                var sortUpIcon = header.find("i.bi-sort-down");

                // Mostrar el ícono correcto según la dirección
                arrowIcon.addClass("d-none");
                if (direction === 'asc') {
                    sortUpIcon.addClass("d-none");
                    sortDownIcon.removeClass("d-none");
                } else {
                    sortDownIcon.addClass("d-none");
                    sortUpIcon.removeClass("d-none");
                }
            }

            // Función para copiar la tabla al portapapeles
            $("#btnCopiarTabla").on("click", function () {
                let tabla = $("#tablaPrincipal"); // Selecciona la tabla
                let texto = "";

                // Recorre los encabezados
                tabla.find("thead th").each(function () {
                    texto += $(this).text().trim() + "\t"; // Separa columnas con tabulaciones
                });
                texto += "\n"; // Nueva línea para las filas

                // Recorre las filas
                tabla.find("tbody tr").each(function () {
                    $(this).find("td").each(function () {
                        texto += $(this).text().trim() + "\t"; // Separa columnas con tabulaciones
                    });
                    texto += "\n"; // Nueva línea para la siguiente fila
                });

                // Copia al portapapeles
                navigator.clipboard.writeText(texto).then(function () {
                    alert("Tabla copiada al portapapeles. Puedes pegarla en una hoja de cálculo.");
                }).catch(function () {
                    alert("No se pudo copiar la tabla. Inténtalo de nuevo.");
                });
            });

            // Función para descargar la tabla como Excel
            $("#btnDescargarExcel").on("click", function () {
                let tabla = $("#tablaPrincipal"); // Selecciona la tabla
                let datos = [];

                // Recorre los encabezados
                let encabezados = [];
                tabla.find("thead th").each(function () {
                    encabezados.push($(this).text().trim());
                });
                datos.push(encabezados); // Agrega los encabezados como primera fila

                // Recorre las filas
                tabla.find("tbody tr").each(function () {
                    let fila = [];
                    $(this).find("td").each(function () {
                        fila.push($(this).text().trim());
                    });
                    datos.push(fila); // Agrega cada fila de datos
                });

                // Convierte los datos en una hoja de cálculo
                let hoja = XLSX.utils.aoa_to_sheet(datos);

                // Crea un libro de Excel y agrega la hoja
                let libro = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(libro, hoja, "Datos");

                // Genera el archivo y lo descarga
                XLSX.writeFile(libro, "tabla_datos.xlsx");
            });

            // Llenar los selects de orientación y turno
            populateSelect(2, "inpOrientacion");
            populateSelect(3, "inpTurno");

            // Actualizar el cuadro dinámico al cargar la página
            updateDynamicBox();

            // Asignar eventos a los inputs y selects
            $("thead input, thead select").on("input", applyFilters);

            // Asignar eventos de clic a los encabezados para ordenar
            $("thead th a").on("click", function (e) {
                e.preventDefault();
                var columnIndex = $(this).closest("th").index();
                sortTable(columnIndex);
            });
        });
    </script>
</body>
</html>